{
  "filename": "packages/react-ui/src/Popup/Popup.tsx",
  "tags": {},
  "filePath": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/packages/react-ui/src/Popup/Popup.tsx",
  "description": "",
  "displayName": "Popup",
  "props": {
    "backgroundColor": {
      "defaultValue": null,
      "description": "Choose Main background Color",
      "name": "backgroundColor",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"text\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"danger\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "display": {
      "defaultValue": null,
      "description": "Set element display",
      "name": "display",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ResponsiveProps<ElementDisplay>"
      }
    },
    "fontWeight": {
      "defaultValue": null,
      "description": "Define the main Font Weight",
      "name": "fontWeight",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "FontWeight",
        "value": [
          {
            "value": "\"light\""
          },
          {
            "value": "\"regular\""
          },
          {
            "value": "\"semi bold\""
          },
          {
            "value": "\"bold\""
          }
        ]
      }
    },
    "size": {
      "defaultValue": null,
      "description": "Change component size",
      "name": "size",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "ElementSize",
        "value": [
          {
            "value": "\"big\""
          },
          {
            "value": "\"small\""
          },
          {
            "value": "\"extra small\""
          },
          {
            "value": "\"normal\""
          },
          {
            "value": "\"large\""
          },
          {
            "value": "\"huge\""
          }
        ]
      }
    },
    "textAlign": {
      "defaultValue": null,
      "description": "Define Text Align",
      "name": "textAlign",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "ContentAlign",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"center\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "textColor": {
      "defaultValue": null,
      "description": "Choose main text color",
      "name": "textColor",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"text\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"danger\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "basic": {
      "defaultValue": null,
      "description": "Simplify Tooltip",
      "name": "basic",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "content": {
      "defaultValue": null,
      "description": "Content Shorthand",
      "name": "content",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandItem<HeaderProps>"
      }
    },
    "disabled": {
      "defaultValue": null,
      "description": "Disable Popup Display",
      "name": "disabled",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "hideOnScroll": {
      "defaultValue": null,
      "description": "Hide Popup on Document Scroll",
      "name": "hideOnScroll",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "hideOnScrollDelay": {
      "defaultValue": null,
      "description": "The close delay used to hide popup after scrolling",
      "name": "hideOnScrollDelay",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "hoverable": {
      "defaultValue": null,
      "description": "Do not close Popup Element on Mouse Over",
      "name": "hoverable",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "inverted": {
      "defaultValue": null,
      "description": "Invert Popup Style",
      "name": "inverted",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "offset": {
      "defaultValue": null,
      "description": "Popup Offset",
      "name": "offset",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "PopperOffsetFunction | [number, number]"
      }
    },
    "onClose": {
      "defaultValue": null,
      "description": "On Close Handler",
      "name": "onClose",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "PopupStateChangeHandler"
      }
    },
    "onMount": {
      "defaultValue": null,
      "description": "On Mount Event Handler",
      "name": "onMount",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "PopupMountChangeHandler"
      }
    },
    "onOpen": {
      "defaultValue": null,
      "description": "On Open Event Handler",
      "name": "onOpen",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "PopupStateChangeHandler"
      }
    },
    "onUnmount": {
      "defaultValue": null,
      "description": "On Unmount Event Handler",
      "name": "onUnmount",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "PopupMountChangeHandler"
      }
    },
    "openOn": {
      "defaultValue": null,
      "description": "Open Triggers Event",
      "name": "openOn",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "PopupOpenEvent[]"
      }
    },
    "position": {
      "defaultValue": null,
      "description": "Set Popup Position",
      "name": "position",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "PopupPosition",
        "value": [
          {
            "value": "\"auto\""
          },
          {
            "value": "\"auto start\""
          },
          {
            "value": "\"auto end\""
          },
          {
            "value": "\"top left\""
          },
          {
            "value": "\"top right\""
          },
          {
            "value": "\"bottom left\""
          },
          {
            "value": "\"bottom right\""
          },
          {
            "value": "\"left center\""
          },
          {
            "value": "\"right center\""
          },
          {
            "value": "\"top center\""
          },
          {
            "value": "\"bottom center\""
          }
        ]
      }
    },
    "popperModifiers": {
      "defaultValue": null,
      "description": "Set Popper Modifier",
      "name": "popperModifiers",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "readonly (Partial<OffsetModifier> | Partial<ApplyStylesModifier> | Partial<ArrowModifier> | Partial<HideModifier> | ... 4 more ... | Partial<...>)[]"
      }
    },
    "portalProps": {
      "defaultValue": null,
      "description": "Add properties to Portal",
      "name": "portalProps",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "PortalProps"
      }
    },
    "updateDependencies": {
      "defaultValue": null,
      "description": "An array of dependencies to force popper update",
      "name": "updateDependencies",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "any[]"
      }
    },
    "trigger": {
      "defaultValue": null,
      "description": "The trigger element",
      "name": "trigger",
      "parent": {
        "fileName": "react-ui/src/Popup/Popup.types.ts",
        "name": "StrictPopupProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Popup/Popup.types.ts",
          "name": "StrictPopupProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ReactElement<any, string | JSXElementConstructor<any>>"
      }
    },
    "children": {
      "defaultValue": null,
      "description": "Main Component Content",
      "name": "children",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreUIComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreUIComponentProps"
        },
        {
          "fileName": "appbuckets/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        {
          "fileName": "appbuckets/node_modules/@types/react/index.d.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "className": {
      "defaultValue": null,
      "description": "User Defined Class Names",
      "name": "className",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreUIVoidComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreUIVoidComponentProps"
        },
        {
          "fileName": "appbuckets/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "as": {
      "defaultValue": null,
      "description": "",
      "name": "as",
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "ElementType<any>"
      }
    }
  }
}