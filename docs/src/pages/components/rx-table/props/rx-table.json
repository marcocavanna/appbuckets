{
  "filename": "packages/react-ui/src/RxTable/RxTable.tsx",
  "tags": {},
  "description": "",
  "displayName": "RxTable",
  "props": {
    "backgroundColor": {
      "defaultValue": null,
      "description": "Choose Main background Color",
      "name": "backgroundColor",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"text\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"danger\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "display": {
      "defaultValue": null,
      "description": "Set element display",
      "name": "display",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ResponsiveProps<ElementDisplay>"
      }
    },
    "fontWeight": {
      "defaultValue": null,
      "description": "Define the main Font Weight",
      "name": "fontWeight",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "FontWeight",
        "value": [
          {
            "value": "\"light\""
          },
          {
            "value": "\"regular\""
          },
          {
            "value": "\"semi bold\""
          },
          {
            "value": "\"bold\""
          }
        ]
      }
    },
    "size": {
      "defaultValue": null,
      "description": "Change component size",
      "name": "size",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "ElementSize",
        "value": [
          {
            "value": "\"big\""
          },
          {
            "value": "\"small\""
          },
          {
            "value": "\"extra small\""
          },
          {
            "value": "\"normal\""
          },
          {
            "value": "\"large\""
          },
          {
            "value": "\"huge\""
          }
        ]
      }
    },
    "textAlign": {
      "defaultValue": null,
      "description": "Define Text Align",
      "name": "textAlign",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "ContentAlign",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"center\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "textColor": {
      "defaultValue": null,
      "description": "Choose main text color",
      "name": "textColor",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"text\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"danger\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "as": {
      "defaultValue": null,
      "description": "An Element used to Render the Component",
      "name": "as",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        },
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "ElementType<any>"
      }
    },
    "children": {
      "defaultValue": null,
      "description": "Children ar not permitted",
      "name": "children",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        },
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/@types/react/index.d.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "never"
      }
    },
    "Components": {
      "defaultValue": null,
      "description": "Components used to render the Table",
      "name": "Components",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "Partial<RxTableComponents<Data>>"
      }
    },
    "compressed": {
      "defaultValue": null,
      "description": "Compress Spacing between cells and rows",
      "name": "compressed",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableHeader": {
      "defaultValue": null,
      "description": "Disable Header Render",
      "name": "disableHeader",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "getRowKey": {
      "defaultValue": null,
      "description": "The row key or a function to get it",
      "name": "getRowKey",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": true,
      "type": {
        "name": "string | number | symbol | ((row: Data, index: number, array: Data[]) => Key)"
      }
    },
    "initiallyLoading": {
      "defaultValue": null,
      "description": "Initial Loading State",
      "name": "initiallyLoading",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "loaderProps": {
      "defaultValue": null,
      "description": "Set default loader props, used with default loader component",
      "name": "loaderProps",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "Partial<LoaderProps>"
      }
    },
    "maximumWidth": {
      "defaultValue": null,
      "description": "Set the maximum width",
      "name": "maximumWidth",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "minimumWidth": {
      "defaultValue": null,
      "description": "Set the minimum width",
      "name": "minimumWidth",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "noDataEmptyContentProps": {
      "defaultValue": null,
      "description": "Set default empty content props, used with default empty component",
      "name": "noDataEmptyContentProps",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "EmptyContentProps"
      }
    },
    "noFilteredDataEmptyContentProps": {
      "defaultValue": null,
      "description": "Set default empty content props, used with default empty component",
      "name": "noFilteredDataEmptyContentProps",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "EmptyContentProps"
      }
    },
    "onRowClick": {
      "defaultValue": null,
      "description": "On Row Click Handler",
      "name": "onRowClick",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(row: Data, index: number, array: Data[]) => void"
      }
    },
    "selectColumnProps": {
      "defaultValue": null,
      "description": "Select Column Props",
      "name": "selectColumnProps",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "Partial<Pick<RxTableColumnProps<Data>, \"className\" | \"key\" | \"headerClassName\" | \"textAlign\">>"
      }
    },
    "style": {
      "defaultValue": null,
      "description": "Wrapper Style",
      "name": "style",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "CSSProperties"
      }
    },
    "subtractToWidth": {
      "defaultValue": null,
      "description": "Set if must subtract some pixel from width",
      "name": "subtractToWidth",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "width": {
      "defaultValue": null,
      "description": "Table Width",
      "name": "width",
      "parent": {
        "fileName": "react-ui/src/RxTable/RxTable.types.ts",
        "name": "StrictRxTableProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.types.ts",
          "name": "StrictRxTableProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "data": {
      "defaultValue": null,
      "description": "Data to load",
      "name": "data",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataLoad.ts",
        "name": "UseDataLoadConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataLoad.ts",
          "name": "UseDataLoadConfig"
        }
      ],
      "required": true,
      "type": {
        "name": "Data[] | ((timestamp: number) => Data[] | Promise<Data[]>)"
      }
    },
    "columns": {
      "defaultValue": null,
      "description": "Columns Array",
      "name": "columns",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useColumns.ts",
        "name": "UseColumnsConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useColumns.ts",
          "name": "UseColumnsConfig"
        },
        {
          "fileName": "react-ui/src/RxTable/lib/useDataFiltering.ts",
          "name": "UseDataFiltering"
        }
      ],
      "required": true,
      "type": {
        "name": "RxTableColumnProps<Data>[]"
      }
    },
    "selectable": {
      "defaultValue": null,
      "description": "Set if data will be selectable\nSet if selector is disabled",
      "name": "selectable",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useColumns.ts",
        "name": "UseColumnsConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useColumns.ts",
          "name": "UseColumnsConfig"
        },
        {
          "fileName": "react-ui/src/RxTable/lib/useDataSelector.ts",
          "name": "UseDataSelectorConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "filterLogic": {
      "defaultValue": null,
      "description": "The filter logic to apply",
      "name": "filterLogic",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataFiltering.ts",
        "name": "UseDataFiltering"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataFiltering.ts",
          "name": "UseDataFiltering"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"and\" | \"or\"",
        "value": [
          {
            "value": "\"and\""
          },
          {
            "value": "\"or\""
          }
        ]
      }
    },
    "defaultData": {
      "defaultValue": null,
      "description": "Default data to use on init",
      "name": "defaultData",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataLoad.ts",
        "name": "UseDataLoadConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataLoad.ts",
          "name": "UseDataLoadConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "Data[]"
      }
    },
    "defaultLoading": {
      "defaultValue": null,
      "description": "Default loading state",
      "name": "defaultLoading",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataLoad.ts",
        "name": "UseDataLoadConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataLoad.ts",
          "name": "UseDataLoadConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "reloadDependency": {
      "defaultValue": null,
      "description": "Dependency to use to reload data",
      "name": "reloadDependency",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataLoad.ts",
        "name": "UseDataLoadConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataLoad.ts",
          "name": "UseDataLoadConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "any"
      }
    },
    "reloadSilently": {
      "defaultValue": null,
      "description": "Reload data silently",
      "name": "reloadSilently",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataLoad.ts",
        "name": "UseDataLoadConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataLoad.ts",
          "name": "UseDataLoadConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "defaultSelectedData": {
      "defaultValue": null,
      "description": "A default selected data",
      "name": "defaultSelectedData",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataSelector.ts",
        "name": "UseDataSelectorConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataSelector.ts",
          "name": "UseDataSelectorConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "Data[]"
      }
    },
    "onSelectedDataChange": {
      "defaultValue": null,
      "description": "An handler to call when selected data change",
      "name": "onSelectedDataChange",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataSelector.ts",
        "name": "UseDataSelectorConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataSelector.ts",
          "name": "UseDataSelectorConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "(selected: Data[]) => void"
      }
    },
    "defaultReverseSorting": {
      "defaultValue": null,
      "description": "Set initial reverse sorting",
      "name": "defaultReverseSorting",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataSorting.ts",
        "name": "UseDataSortingConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataSorting.ts",
          "name": "UseDataSortingConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "defaultSort": {
      "defaultValue": null,
      "description": "Set initial sort",
      "name": "defaultSort",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataSorting.ts",
        "name": "UseDataSortingConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataSorting.ts",
          "name": "UseDataSortingConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "string[]"
      }
    },
    "onSortChange": {
      "defaultValue": null,
      "description": "Callback handler fired when sort is changing",
      "name": "onSortChange",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataSorting.ts",
        "name": "UseDataSortingConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataSorting.ts",
          "name": "UseDataSortingConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "(sorting: string[], reverse: boolean) => void"
      }
    },
    "reverseSorting": {
      "defaultValue": null,
      "description": "Manual control reverse sorting",
      "name": "reverseSorting",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataSorting.ts",
        "name": "UseDataSortingConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataSorting.ts",
          "name": "UseDataSortingConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "sort": {
      "defaultValue": null,
      "description": "Manual control sorting",
      "name": "sort",
      "parent": {
        "fileName": "react-ui/src/RxTable/lib/useDataSorting.ts",
        "name": "UseDataSortingConfig"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/lib/useDataSorting.ts",
          "name": "UseDataSortingConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "string[]"
      }
    },
    "isVirtualized": {
      "defaultValue": null,
      "description": "",
      "name": "isVirtualized",
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.factory.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "classes": {
      "defaultValue": null,
      "description": "",
      "name": "classes",
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.factory.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "Partial<Record<keyof RxTableComponents<any> | \"FilterCell\" | \"FilterRow\", string>>"
      }
    },
    "styles": {
      "defaultValue": null,
      "description": "",
      "name": "styles",
      "declarations": [
        {
          "fileName": "react-ui/src/RxTable/RxTable.factory.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "Partial<Record<keyof RxTableComponents<any> | \"FilterCell\" | \"FilterRow\", CSSProperties>>"
      }
    },
    "content": {
      "defaultValue": null,
      "description": "Content Shorthand",
      "name": "content",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreUIComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreUIComponentProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandContent"
      }
    },
    "className": {
      "defaultValue": null,
      "description": "User Defined Class Names",
      "name": "className",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreUIVoidComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreUIVoidComponentProps"
        },
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    }
  }
}