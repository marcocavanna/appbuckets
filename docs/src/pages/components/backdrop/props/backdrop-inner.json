{
  "filename": "packages/react-ui/src/Backdrop/BackdropInner.tsx",
  "tags": {},
  "description": "",
  "displayName": "BackdropInner",
  "props": {
    "animated": {
      "defaultValue": null,
      "description": "Set the backdrop as animated",
      "name": "animated",
      "parent": {
        "fileName": "react-ui/src/Backdrop/BackdropInner.types.ts",
        "name": "StrictBackdropInnerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Backdrop/BackdropInner.types.ts",
          "name": "StrictBackdropInnerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "onClick": {
      "defaultValue": null,
      "description": "Handle Click Event",
      "name": "onClick",
      "parent": {
        "fileName": "react-ui/src/Backdrop/BackdropInner.types.ts",
        "name": "StrictBackdropInnerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Backdrop/BackdropInner.types.ts",
          "name": "StrictBackdropInnerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(event: MouseEvent<HTMLElement, MouseEvent>, props: BackdropInnerProps) => void"
      }
    },
    "onClickOutside": {
      "defaultValue": null,
      "description": "Handle Click Event occurred outside Backdrop Content, but in Backdrop Area",
      "name": "onClickOutside",
      "parent": {
        "fileName": "react-ui/src/Backdrop/BackdropInner.types.ts",
        "name": "StrictBackdropInnerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Backdrop/BackdropInner.types.ts",
          "name": "StrictBackdropInnerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(event: MouseEvent<HTMLElement, MouseEvent>, props: BackdropInnerProps) => void"
      }
    },
    "verticalAlign": {
      "defaultValue": null,
      "description": "Set the content vertical align",
      "name": "verticalAlign",
      "parent": {
        "fileName": "react-ui/src/Backdrop/BackdropInner.types.ts",
        "name": "StrictBackdropInnerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Backdrop/BackdropInner.types.ts",
          "name": "StrictBackdropInnerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "FlexContentVerticalAlign",
        "value": [
          {
            "value": "\"on top\""
          },
          {
            "value": "\"on bottom\""
          },
          {
            "value": "\"center\""
          },
          {
            "value": "\"stretched\""
          }
        ]
      }
    },
    "visible": {
      "defaultValue": null,
      "description": "Set the backdrop and its content as visible",
      "name": "visible",
      "parent": {
        "fileName": "react-ui/src/Backdrop/BackdropInner.types.ts",
        "name": "StrictBackdropInnerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Backdrop/BackdropInner.types.ts",
          "name": "StrictBackdropInnerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "as": {
      "defaultValue": null,
      "description": "An Element used to Render the Component",
      "name": "as",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreAppBucketsComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreAppBucketsComponentProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ElementType<any>"
      }
    },
    "children": {
      "defaultValue": null,
      "description": "Main Component Content",
      "name": "children",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreAppBucketsComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreAppBucketsComponentProps"
        },
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/@types/react/index.d.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "className": {
      "defaultValue": null,
      "description": "User Defined Class Names",
      "name": "className",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreAppBucketsComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreAppBucketsComponentProps"
        },
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "content": {
      "defaultValue": null,
      "description": "Content Shorthand",
      "name": "content",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreAppBucketsComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreAppBucketsComponentProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    }
  }
}