{
  "filename": "packages/react-ui/src/Form/FormikFields.tsx",
  "tags": {},
  "description": "",
  "displayName": "FormikColorPicker",
  "props": {
    "color": {
      "defaultValue": null,
      "description": "Manually control Color",
      "name": "color",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "colors": {
      "defaultValue": null,
      "description": "Color available",
      "name": "colors",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string[]"
      }
    },
    "defaultColor": {
      "defaultValue": null,
      "description": "Set initial Color",
      "name": "defaultColor",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "defaultOpen": {
      "defaultValue": null,
      "description": "Set default Open State for Picker Popup",
      "name": "defaultOpen",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disabled": {
      "defaultValue": null,
      "description": "Disable the Picker",
      "name": "disabled",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "onChange": {
      "defaultValue": null,
      "description": "On Change Color event Handler",
      "name": "onChange",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(nothing: null, props: ColorPickerProps) => void"
      }
    },
    "onPickerClose": {
      "defaultValue": null,
      "description": "Handler for Picker Close event",
      "name": "onPickerClose",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "() => void"
      }
    },
    "onPickerOpen": {
      "defaultValue": null,
      "description": "Handler for Picker Open event",
      "name": "onPickerOpen",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "() => void"
      }
    },
    "open": {
      "defaultValue": null,
      "description": "Manually control Open State for Picker Popup",
      "name": "open",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "pickerType": {
      "defaultValue": null,
      "description": "Set the Picker Type",
      "name": "pickerType",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"twitter\" | \"circle\" | \"block\"",
        "value": [
          {
            "value": "\"twitter\""
          },
          {
            "value": "\"circle\""
          },
          {
            "value": "\"block\""
          }
        ]
      }
    },
    "placeholder": {
      "defaultValue": null,
      "description": "Placeholder",
      "name": "placeholder",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "showColorValue": {
      "defaultValue": null,
      "description": "Show the Color Value",
      "name": "showColorValue",
      "parent": {
        "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
        "name": "StrictColorPickerProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/ColorPicker/ColorPicker.types.ts",
          "name": "StrictColorPickerProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "actions": {
      "defaultValue": null,
      "description": "A Button to Show",
      "name": "actions",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandCollection<ButtonProps>"
      }
    },
    "actionsPosition": {
      "defaultValue": null,
      "description": "Set action button position, default to right",
      "name": "actionsPosition",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"left\" | \"right\"",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "clearable": {
      "defaultValue": null,
      "description": "Set the Field as Clearable",
      "name": "clearable",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "contentClassName": {
      "defaultValue": null,
      "description": "User defined className used for content element",
      "name": "contentClassName",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "contentType": {
      "defaultValue": null,
      "description": "Set field content type",
      "name": "contentType",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"input\" | \"radio\" | \"switch\" | \"color\" | \"select input\" | \"checkbox\"",
        "value": [
          {
            "value": "\"input\""
          },
          {
            "value": "\"radio\""
          },
          {
            "value": "\"switch\""
          },
          {
            "value": "\"color\""
          },
          {
            "value": "\"select input\""
          },
          {
            "value": "\"checkbox\""
          }
        ]
      }
    },
    "hint": {
      "defaultValue": null,
      "description": "An hint, appended after field content",
      "name": "hint",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "hintClassName": {
      "defaultValue": null,
      "description": "User defined className used for hint element",
      "name": "hintClassName",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "icon": {
      "defaultValue": null,
      "description": "An Icon to Show",
      "name": "icon",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "AppBucketsIcon<IconProps>"
      }
    },
    "iconPosition": {
      "defaultValue": null,
      "description": "Set the icon position, default to left",
      "name": "iconPosition",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"left\" | \"right\"",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "isDirty": {
      "defaultValue": null,
      "description": "Set field as Dirty",
      "name": "isDirty",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "isFocused": {
      "defaultValue": null,
      "description": "Set field as Focused",
      "name": "isFocused",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "isTouched": {
      "defaultValue": null,
      "description": "Set field as Touched",
      "name": "isTouched",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "label": {
      "defaultValue": null,
      "description": "Field Label",
      "name": "label",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "onClear": {
      "defaultValue": null,
      "description": "On Clear Button click",
      "name": "onClear",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(e: MouseEvent<SVGSVGElement, MouseEvent>) => void"
      }
    },
    "readOnly": {
      "defaultValue": null,
      "description": "Set field as read only",
      "name": "readOnly",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "required": {
      "defaultValue": null,
      "description": "Set the field as Required",
      "name": "required",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "appearance": {
      "defaultValue": null,
      "description": "Manually set the Element appearance by Color Pool",
      "name": "appearance",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "SharedComponentStateProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "SharedComponentStateProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"danger\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"amazon\""
          },
          {
            "value": "\"android\""
          },
          {
            "value": "\"apple\""
          },
          {
            "value": "\"facebook\""
          },
          {
            "value": "\"google\""
          },
          {
            "value": "\"google-plus\""
          },
          {
            "value": "\"instagram\""
          },
          {
            "value": "\"linkedin\""
          },
          {
            "value": "\"microsoft\""
          },
          {
            "value": "\"pinterest\""
          },
          {
            "value": "\"skype\""
          },
          {
            "value": "\"slack\""
          },
          {
            "value": "\"telegram\""
          },
          {
            "value": "\"tumblr\""
          },
          {
            "value": "\"twitter\""
          },
          {
            "value": "\"vimeo\""
          },
          {
            "value": "\"whatsapp\""
          },
          {
            "value": "\"yahoo\""
          },
          {
            "value": "\"youtube\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"text\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud dark\""
          },
          {
            "value": "\"dribble\""
          }
        ]
      }
    },
    "danger": {
      "defaultValue": null,
      "description": "Set the Danger State",
      "name": "danger",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "SharedComponentStateProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "SharedComponentStateProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "info": {
      "defaultValue": null,
      "description": "Set the Info State",
      "name": "info",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "SharedComponentStateProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "SharedComponentStateProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "primary": {
      "defaultValue": null,
      "description": "Set the Primary State",
      "name": "primary",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "SharedComponentStateProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "SharedComponentStateProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "secondary": {
      "defaultValue": null,
      "description": "Set the Secondary State",
      "name": "secondary",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "SharedComponentStateProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "SharedComponentStateProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "success": {
      "defaultValue": null,
      "description": "Set the Success State",
      "name": "success",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "SharedComponentStateProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "SharedComponentStateProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "warning": {
      "defaultValue": null,
      "description": "Set the Warning State",
      "name": "warning",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "SharedComponentStateProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "SharedComponentStateProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "name": {
      "defaultValue": null,
      "description": "The field name is required to let formik work",
      "name": "name",
      "declarations": [
        {
          "fileName": "react-ui/src/Form/lib/withFormikField.types.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": true,
      "type": {
        "name": "string"
      }
    },
    "getErrorOnSubmitted": {
      "defaultValue": null,
      "description": "Get the error message only once form has been submitted at least once, default to `true`",
      "name": "getErrorOnSubmitted",
      "declarations": [
        {
          "fileName": "react-ui/src/Form/lib/withFormikField.types.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "getErrorOnTouched": {
      "defaultValue": null,
      "description": "Get the error message once field has been touched, default to `false`",
      "name": "getErrorOnTouched",
      "declarations": [
        {
          "fileName": "react-ui/src/Form/lib/withFormikField.types.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "setTouchedOnChange": {
      "defaultValue": null,
      "description": "Override the default setTouchedOnChange behaviour",
      "name": "setTouchedOnChange",
      "declarations": [
        {
          "fileName": "react-ui/src/Form/lib/withFormikField.types.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "validate": {
      "defaultValue": null,
      "description": "Field Validator Function",
      "name": "validate",
      "declarations": [
        {
          "fileName": "react-ui/src/Form/lib/withFormikField.types.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "FieldValidator"
      }
    }
  }
}