{
  "filename": "packages/react-ui/src/Form/FormFormik.tsx",
  "tags": {},
  "description": "",
  "displayName": "FormFormik",
  "props": {
    "cancelButton": {
      "defaultValue": null,
      "description": "The Cancel Button",
      "name": "cancelButton",
      "parent": {
        "fileName": "react-ui/src/Form/FormFormik.types.ts",
        "name": "StrictFormFormikProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Form/FormFormik.types.ts",
          "name": "StrictFormFormikProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandItem<ButtonProps>"
      }
    },
    "children": {
      "defaultValue": null,
      "description": "Form content",
      "name": "children",
      "parent": {
        "fileName": "react-ui/src/Form/FormFormik.types.ts",
        "name": "StrictFormFormikProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Form/FormFormik.types.ts",
          "name": "StrictFormFormikProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "disabled": {
      "defaultValue": null,
      "description": "Disable form submit",
      "name": "disabled",
      "parent": {
        "fileName": "react-ui/src/Form/FormFormik.types.ts",
        "name": "StrictFormFormikProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Form/FormFormik.types.ts",
          "name": "StrictFormFormikProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "formActionWrapper": {
      "defaultValue": null,
      "description": "The element type that will wrap the form actions",
      "name": "formActionWrapper",
      "parent": {
        "fileName": "react-ui/src/Form/FormFormik.types.ts",
        "name": "StrictFormFormikProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Form/FormFormik.types.ts",
          "name": "StrictFormFormikProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ElementType<any> | ComponentType<FormFormikWrapperProps>"
      }
    },
    "formContentWrapper": {
      "defaultValue": null,
      "description": "The element type that will wrap the form",
      "name": "formContentWrapper",
      "parent": {
        "fileName": "react-ui/src/Form/FormFormik.types.ts",
        "name": "StrictFormFormikProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Form/FormFormik.types.ts",
          "name": "StrictFormFormikProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ElementType<any> | ComponentType<FormFormikWrapperProps>"
      }
    },
    "onCancel": {
      "defaultValue": null,
      "description": "On Cancel function handler",
      "name": "onCancel",
      "parent": {
        "fileName": "react-ui/src/Form/FormFormik.types.ts",
        "name": "StrictFormFormikProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Form/FormFormik.types.ts",
          "name": "StrictFormFormikProps"
        }
      ],
      "required": false,
      "type": {
        "name": "FormFormikActionHandler<Values, any>"
      }
    },
    "onSubmit": {
      "defaultValue": null,
      "description": "On Submit function handler",
      "name": "onSubmit",
      "parent": {
        "fileName": "react-ui/src/Form/FormFormik.types.ts",
        "name": "StrictFormFormikProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Form/FormFormik.types.ts",
          "name": "StrictFormFormikProps"
        }
      ],
      "required": false,
      "type": {
        "name": "FormFormikActionHandler<Values, SubmitResult>"
      }
    },
    "onSubmitCompleted": {
      "defaultValue": null,
      "description": "Called when the submit handler is complete",
      "name": "onSubmitCompleted",
      "parent": {
        "fileName": "react-ui/src/Form/FormFormik.types.ts",
        "name": "StrictFormFormikProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Form/FormFormik.types.ts",
          "name": "StrictFormFormikProps"
        }
      ],
      "required": false,
      "type": {
        "name": "FormFormikSubmitComplete<SubmitResult, Values>"
      }
    },
    "onSubmitError": {
      "defaultValue": null,
      "description": "Called when a submit fail",
      "name": "onSubmitError",
      "parent": {
        "fileName": "react-ui/src/Form/FormFormik.types.ts",
        "name": "StrictFormFormikProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Form/FormFormik.types.ts",
          "name": "StrictFormFormikProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(error: any, values: Values, helpers: FormikHelpers<Values>) => void"
      }
    },
    "resetOnCancel": {
      "defaultValue": null,
      "description": "Reset form on Cancel pressed",
      "name": "resetOnCancel",
      "parent": {
        "fileName": "react-ui/src/Form/FormFormik.types.ts",
        "name": "StrictFormFormikProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Form/FormFormik.types.ts",
          "name": "StrictFormFormikProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "submitButton": {
      "defaultValue": null,
      "description": "The Submit Button",
      "name": "submitButton",
      "parent": {
        "fileName": "react-ui/src/Form/FormFormik.types.ts",
        "name": "StrictFormFormikProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Form/FormFormik.types.ts",
          "name": "StrictFormFormikProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandItem<ButtonProps>"
      }
    },
    "component": {
      "defaultValue": null,
      "description": "Form component to render",
      "name": "component",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "ReactNode | ComponentType<FormikProps<Values>>"
      }
    },
    "render": {
      "defaultValue": null,
      "description": "Render prop (works like React router's <Route render={props =>} />)\n@deprecated",
      "name": "render",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "(props: FormikProps<Values>) => ReactNode"
      }
    },
    "initialValues": {
      "defaultValue": null,
      "description": "Initial values of the form",
      "name": "initialValues",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikConfig"
        }
      ],
      "required": true,
      "type": {
        "name": "Values"
      }
    },
    "initialStatus": {
      "defaultValue": null,
      "description": "Initial status",
      "name": "initialStatus",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "any"
      }
    },
    "initialErrors": {
      "defaultValue": null,
      "description": "Initial object map of field names to specific error for that field",
      "name": "initialErrors",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "FormikErrors<Values>"
      }
    },
    "initialTouched": {
      "defaultValue": null,
      "description": "Initial object map of field names to whether the field has been touched",
      "name": "initialTouched",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "FormikTouched<Values>"
      }
    },
    "onReset": {
      "defaultValue": null,
      "description": "Reset handler",
      "name": "onReset",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "(values: Values, formikHelpers: FormikHelpers<Values>) => void"
      }
    },
    "validationSchema": {
      "defaultValue": null,
      "description": "A Yup Schema or a function that returns a Yup schema",
      "name": "validationSchema",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "any"
      }
    },
    "validate": {
      "defaultValue": null,
      "description": "Validation function. Must return an error object or promise that\nthrows an error object where that object keys map to corresponding value.",
      "name": "validate",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "(values: Values) => void | object | Promise<FormikErrors<Values>>"
      }
    },
    "innerRef": {
      "defaultValue": null,
      "description": "Inner ref",
      "name": "innerRef",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "Ref<FormikProps<Values>>"
      }
    },
    "validateOnChange": {
      "defaultValue": null,
      "description": "Tells Formik to validate the form on each input's onChange event",
      "name": "validateOnChange",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikSharedConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikSharedConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "validateOnBlur": {
      "defaultValue": null,
      "description": "Tells Formik to validate the form on each input's onBlur event",
      "name": "validateOnBlur",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikSharedConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikSharedConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "validateOnMount": {
      "defaultValue": null,
      "description": "Tells Formik to validate upon mount",
      "name": "validateOnMount",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikSharedConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikSharedConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "isInitialValid": {
      "defaultValue": null,
      "description": "Tell Formik if initial form values are valid or not on first render",
      "name": "isInitialValid",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikSharedConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikSharedConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean | ((props: {}) => boolean)"
      }
    },
    "enableReinitialize": {
      "defaultValue": null,
      "description": "Should Formik reset the form when new initialValues change",
      "name": "enableReinitialize",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
        "name": "FormikSharedConfig"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/formik/dist/types.d.ts",
          "name": "FormikSharedConfig"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    }
  }
}