{
  "filename": "packages/react-ui/src/Slider/Slider.tsx",
  "tags": {},
  "description": "",
  "displayName": "Slider",
  "props": {
    "backgroundColor": {
      "defaultValue": null,
      "description": "Choose Main background Color",
      "name": "backgroundColor",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"danger\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"text\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "display": {
      "defaultValue": null,
      "description": "Set element display",
      "name": "display",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ResponsiveProps<ElementDisplay>"
      }
    },
    "fontWeight": {
      "defaultValue": null,
      "description": "Define the main Font Weight",
      "name": "fontWeight",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "FontWeight",
        "value": [
          {
            "value": "\"light\""
          },
          {
            "value": "\"regular\""
          },
          {
            "value": "\"semi bold\""
          },
          {
            "value": "\"bold\""
          }
        ]
      }
    },
    "size": {
      "defaultValue": null,
      "description": "Change component size",
      "name": "size",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "ElementSize",
        "value": [
          {
            "value": "\"extra small\""
          },
          {
            "value": "\"small\""
          },
          {
            "value": "\"normal\""
          },
          {
            "value": "\"large\""
          },
          {
            "value": "\"big\""
          },
          {
            "value": "\"huge\""
          }
        ]
      }
    },
    "textAlign": {
      "defaultValue": null,
      "description": "Define Text Align",
      "name": "textAlign",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "ContentAlign",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"center\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "textColor": {
      "defaultValue": null,
      "description": "Choose main text color",
      "name": "textColor",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"danger\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"text\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "onAfterChange": {
      "defaultValue": null,
      "description": "Called after slider value change",
      "name": "onAfterChange",
      "parent": {
        "fileName": "react-ui/src/Slider/Slider.types.ts",
        "name": "StrictSliderProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Slider/Slider.types.ts",
          "name": "StrictSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(nothing: null, props: SliderProps) => void"
      }
    },
    "onBeforeChange": {
      "defaultValue": null,
      "description": "Called before slider change",
      "name": "onBeforeChange",
      "parent": {
        "fileName": "react-ui/src/Slider/Slider.types.ts",
        "name": "StrictSliderProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Slider/Slider.types.ts",
          "name": "StrictSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(nothing: null, props: SliderProps) => void"
      }
    },
    "onBlur": {
      "defaultValue": null,
      "description": "Called on slider blur event occurred",
      "name": "onBlur",
      "parent": {
        "fileName": "react-ui/src/Slider/Slider.types.ts",
        "name": "StrictSliderProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Slider/Slider.types.ts",
          "name": "StrictSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(e: FocusEvent<HTMLDivElement>, props: SliderProps) => void"
      }
    },
    "onChange": {
      "defaultValue": null,
      "description": "Called every time slider change",
      "name": "onChange",
      "parent": {
        "fileName": "react-ui/src/Slider/Slider.types.ts",
        "name": "StrictSliderProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Slider/Slider.types.ts",
          "name": "StrictSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(nothing: null, props: SliderProps) => void"
      }
    },
    "onFocus": {
      "defaultValue": null,
      "description": "Called on slider focus event occurred",
      "name": "onFocus",
      "parent": {
        "fileName": "react-ui/src/Slider/Slider.types.ts",
        "name": "StrictSliderProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Slider/Slider.types.ts",
          "name": "StrictSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(e: FocusEvent<HTMLDivElement>, props: SliderProps) => void"
      }
    },
    "tooltip": {
      "defaultValue": null,
      "description": "Show Tooltip on Mouse Over, pass a function to format value",
      "name": "tooltip",
      "parent": {
        "fileName": "react-ui/src/Slider/Slider.types.ts",
        "name": "StrictSliderProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Slider/Slider.types.ts",
          "name": "StrictSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean | ((value: number) => ReactNode)"
      }
    },
    "actions": {
      "defaultValue": null,
      "description": "A Button to Show",
      "name": "actions",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandCollection<ButtonProps>"
      }
    },
    "actionsPosition": {
      "defaultValue": null,
      "description": "Set action button position, default to right",
      "name": "actionsPosition",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"left\" | \"right\"",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "clearable": {
      "defaultValue": null,
      "description": "Set the Field as Clearable",
      "name": "clearable",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "contentClassName": {
      "defaultValue": null,
      "description": "User defined className used for content element",
      "name": "contentClassName",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "contentType": {
      "defaultValue": null,
      "description": "Set field content type",
      "name": "contentType",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"color\" | \"input\" | \"select input\" | \"checkbox\" | \"radio\" | \"switch\" | \"slider\"",
        "value": [
          {
            "value": "\"color\""
          },
          {
            "value": "\"input\""
          },
          {
            "value": "\"select input\""
          },
          {
            "value": "\"checkbox\""
          },
          {
            "value": "\"radio\""
          },
          {
            "value": "\"switch\""
          },
          {
            "value": "\"slider\""
          }
        ]
      }
    },
    "disabled": {
      "defaultValue": null,
      "description": "Set the field as Disabled",
      "name": "disabled",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "hint": {
      "defaultValue": null,
      "description": "An hint, appended after field content",
      "name": "hint",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandContent"
      }
    },
    "hintClassName": {
      "defaultValue": null,
      "description": "User defined className used for hint element",
      "name": "hintClassName",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "icon": {
      "defaultValue": null,
      "description": "An Icon to Show",
      "name": "icon",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "AppBucketsIcon<IconProps>"
      }
    },
    "iconPosition": {
      "defaultValue": null,
      "description": "Set the icon position, default to left",
      "name": "iconPosition",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"left\" | \"right\"",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "isDirty": {
      "defaultValue": null,
      "description": "Set field as Dirty",
      "name": "isDirty",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "isFocused": {
      "defaultValue": null,
      "description": "Set field as Focused",
      "name": "isFocused",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "isTouched": {
      "defaultValue": null,
      "description": "Set field as Touched",
      "name": "isTouched",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "label": {
      "defaultValue": null,
      "description": "Field Label",
      "name": "label",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandContent"
      }
    },
    "onClear": {
      "defaultValue": null,
      "description": "On Clear Button click",
      "name": "onClear",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(e: MouseEvent<SVGSVGElement, MouseEvent>) => void"
      }
    },
    "readOnly": {
      "defaultValue": null,
      "description": "Set field as read only",
      "name": "readOnly",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "required": {
      "defaultValue": null,
      "description": "Set the field as Required",
      "name": "required",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "appearance": {
      "defaultValue": null,
      "description": "Manually set the Element appearance by Color Pool",
      "name": "appearance",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"danger\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"text\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "danger": {
      "defaultValue": null,
      "description": "Set the Danger State",
      "name": "danger",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "info": {
      "defaultValue": null,
      "description": "Set the Info State",
      "name": "info",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "primary": {
      "defaultValue": null,
      "description": "Set the Primary State",
      "name": "primary",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "secondary": {
      "defaultValue": null,
      "description": "Set the Secondary State",
      "name": "secondary",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "success": {
      "defaultValue": null,
      "description": "Set the Success State",
      "name": "success",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "warning": {
      "defaultValue": null,
      "description": "Set the Warning State",
      "name": "warning",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "className": {
      "defaultValue": null,
      "description": "",
      "name": "className",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
        "name": "GenericSliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
          "name": "GenericSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "value": {
      "defaultValue": null,
      "description": "",
      "name": "value",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "defaultValue": {
      "defaultValue": null,
      "description": "",
      "name": "defaultValue",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "min": {
      "defaultValue": null,
      "description": "",
      "name": "min",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "max": {
      "defaultValue": null,
      "description": "",
      "name": "max",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "step": {
      "defaultValue": null,
      "description": "",
      "name": "step",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "prefixCls": {
      "defaultValue": null,
      "description": "",
      "name": "prefixCls",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "vertical": {
      "defaultValue": null,
      "description": "",
      "name": "vertical",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "included": {
      "defaultValue": null,
      "description": "",
      "name": "included",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "reverse": {
      "defaultValue": null,
      "description": "",
      "name": "reverse",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "minimumTrackStyle": {
      "defaultValue": null,
      "description": "",
      "name": "minimumTrackStyle",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "any"
      }
    },
    "trackStyle": {
      "defaultValue": null,
      "description": "",
      "name": "trackStyle",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "any"
      }
    },
    "handleStyle": {
      "defaultValue": null,
      "description": "",
      "name": "handleStyle",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "any"
      }
    },
    "tabIndex": {
      "defaultValue": null,
      "description": "",
      "name": "tabIndex",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "ariaLabelForHandle": {
      "defaultValue": null,
      "description": "",
      "name": "ariaLabelForHandle",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "ariaLabelledByForHandle": {
      "defaultValue": null,
      "description": "",
      "name": "ariaLabelledByForHandle",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "ariaValueTextFormatterForHandle": {
      "defaultValue": null,
      "description": "",
      "name": "ariaValueTextFormatterForHandle",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "startPoint": {
      "defaultValue": null,
      "description": "",
      "name": "startPoint",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "handle": {
      "defaultValue": null,
      "description": "",
      "name": "handle",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
        "name": "SliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/Slider.d.ts",
          "name": "SliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(props: { className: string; prefixCls?: string; vertical?: boolean; offset: number; value: number; dragging?: boolean; disabled?: boolean; min?: number; max?: number; reverse?: boolean; index: number; tabIndex?: number; ... 4 more ...; ref?: any; }) => any"
      }
    },
    "autoFocus": {
      "defaultValue": null,
      "description": "",
      "name": "autoFocus",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
        "name": "GenericSliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
          "name": "GenericSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "marks": {
      "defaultValue": null,
      "description": "",
      "name": "marks",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
        "name": "GenericSliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
          "name": "GenericSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "Record<number, ReactNode | { style?: CSSProperties; label?: string; }>"
      }
    },
    "dots": {
      "defaultValue": null,
      "description": "",
      "name": "dots",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
        "name": "GenericSliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
          "name": "GenericSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "maximumTrackStyle": {
      "defaultValue": null,
      "description": "",
      "name": "maximumTrackStyle",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
        "name": "GenericSliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
          "name": "GenericSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "CSSProperties"
      }
    },
    "style": {
      "defaultValue": null,
      "description": "",
      "name": "style",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
        "name": "GenericSliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
          "name": "GenericSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "CSSProperties"
      }
    },
    "railStyle": {
      "defaultValue": null,
      "description": "",
      "name": "railStyle",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
        "name": "GenericSliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
          "name": "GenericSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "CSSProperties"
      }
    },
    "dotStyle": {
      "defaultValue": null,
      "description": "",
      "name": "dotStyle",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
        "name": "GenericSliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
          "name": "GenericSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "CSSProperties"
      }
    },
    "activeDotStyle": {
      "defaultValue": null,
      "description": "",
      "name": "activeDotStyle",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
        "name": "GenericSliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
          "name": "GenericSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "CSSProperties"
      }
    },
    "draggableTrack": {
      "defaultValue": null,
      "description": "",
      "name": "draggableTrack",
      "parent": {
        "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
        "name": "GenericSliderProps"
      },
      "declarations": [
        {
          "fileName": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/node_modules/rc-slider/lib/interface.d.ts",
          "name": "GenericSliderProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    }
  }
}