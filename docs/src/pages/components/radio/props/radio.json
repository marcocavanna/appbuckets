{
  "filename": "packages/react-ui/src/Radio/Radio.tsx",
  "tags": {},
  "filePath": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/packages/react-ui/src/Radio/Radio.tsx",
  "description": "",
  "displayName": "Radio",
  "props": {
    "backgroundColor": {
      "defaultValue": null,
      "description": "Choose Main background Color",
      "name": "backgroundColor",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"text\""
          },
          {
            "value": "\"danger\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "display": {
      "defaultValue": null,
      "description": "Set element display",
      "name": "display",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ResponsiveProps<ElementDisplay>"
      }
    },
    "fontWeight": {
      "defaultValue": null,
      "description": "Define the main Font Weight",
      "name": "fontWeight",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "FontWeight",
        "value": [
          {
            "value": "\"light\""
          },
          {
            "value": "\"regular\""
          },
          {
            "value": "\"semi bold\""
          },
          {
            "value": "\"bold\""
          }
        ]
      }
    },
    "size": {
      "defaultValue": null,
      "description": "Change component size",
      "name": "size",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "ElementSize",
        "value": [
          {
            "value": "\"big\""
          },
          {
            "value": "\"small\""
          },
          {
            "value": "\"extra small\""
          },
          {
            "value": "\"normal\""
          },
          {
            "value": "\"large\""
          },
          {
            "value": "\"huge\""
          }
        ]
      }
    },
    "textAlign": {
      "defaultValue": null,
      "description": "Define Text Align",
      "name": "textAlign",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "ContentAlign",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"center\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "textColor": {
      "defaultValue": null,
      "description": "Choose main text color",
      "name": "textColor",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"text\""
          },
          {
            "value": "\"danger\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "defaultValue": {
      "defaultValue": null,
      "description": "The default radio value",
      "name": "defaultValue",
      "parent": {
        "fileName": "react-ui/src/Radio/Radio.types.ts",
        "name": "StrictRadioProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Radio/Radio.types.ts",
          "name": "StrictRadioProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string | number"
      }
    },
    "onChange": {
      "defaultValue": null,
      "description": "On Change Value event",
      "name": "onChange",
      "parent": {
        "fileName": "react-ui/src/Radio/Radio.types.ts",
        "name": "StrictRadioProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Radio/Radio.types.ts",
          "name": "StrictRadioProps"
        }
      ],
      "required": false,
      "type": {
        "name": "RadioChangeHandler"
      }
    },
    "options": {
      "defaultValue": null,
      "description": "Options shorthand collections",
      "name": "options",
      "parent": {
        "fileName": "react-ui/src/Radio/Radio.types.ts",
        "name": "StrictRadioProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Radio/Radio.types.ts",
          "name": "StrictRadioProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandCollection<RadioOptionProps>"
      }
    },
    "stacked": {
      "defaultValue": null,
      "description": "Display one option per line",
      "name": "stacked",
      "parent": {
        "fileName": "react-ui/src/Radio/Radio.types.ts",
        "name": "StrictRadioProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Radio/Radio.types.ts",
          "name": "StrictRadioProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "value": {
      "defaultValue": null,
      "description": "Set value as controlled component",
      "name": "value",
      "parent": {
        "fileName": "react-ui/src/Radio/Radio.types.ts",
        "name": "StrictRadioProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Radio/Radio.types.ts",
          "name": "StrictRadioProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string | number"
      }
    },
    "actions": {
      "defaultValue": null,
      "description": "A Button to Show",
      "name": "actions",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandCollection<ButtonProps>"
      }
    },
    "actionsPosition": {
      "defaultValue": null,
      "description": "Set action button position, default to right",
      "name": "actionsPosition",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"left\" | \"right\"",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "clearable": {
      "defaultValue": null,
      "description": "Set the Field as Clearable",
      "name": "clearable",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "contentClassName": {
      "defaultValue": null,
      "description": "User defined className used for content element",
      "name": "contentClassName",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "contentType": {
      "defaultValue": null,
      "description": "Set field content type",
      "name": "contentType",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"input\" | \"switch\" | \"color\" | \"select input\" | \"checkbox\" | \"radio\" | \"slider\"",
        "value": [
          {
            "value": "\"input\""
          },
          {
            "value": "\"switch\""
          },
          {
            "value": "\"color\""
          },
          {
            "value": "\"select input\""
          },
          {
            "value": "\"checkbox\""
          },
          {
            "value": "\"radio\""
          },
          {
            "value": "\"slider\""
          }
        ]
      }
    },
    "disabled": {
      "defaultValue": null,
      "description": "Set the field as Disabled",
      "name": "disabled",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "hint": {
      "defaultValue": null,
      "description": "Field hint, appended after field content",
      "name": "hint",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandContent"
      }
    },
    "hintClassName": {
      "defaultValue": null,
      "description": "User defined className used for hint element",
      "name": "hintClassName",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "icon": {
      "defaultValue": null,
      "description": "An Icon to Show",
      "name": "icon",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "AppBucketsIcon<IconProps>"
      }
    },
    "iconPosition": {
      "defaultValue": null,
      "description": "Set the icon position, default to left",
      "name": "iconPosition",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"left\" | \"right\"",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "isDirty": {
      "defaultValue": null,
      "description": "Set field as Dirty",
      "name": "isDirty",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "isFocused": {
      "defaultValue": null,
      "description": "Set field as Focused",
      "name": "isFocused",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "isTouched": {
      "defaultValue": null,
      "description": "Set field as Touched",
      "name": "isTouched",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "label": {
      "defaultValue": null,
      "description": "Field Label",
      "name": "label",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandContent"
      }
    },
    "onClear": {
      "defaultValue": null,
      "description": "On Clear Button click",
      "name": "onClear",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "(e: MouseEvent<SVGSVGElement, MouseEvent>) => void"
      }
    },
    "readOnly": {
      "defaultValue": null,
      "description": "Set field as read only",
      "name": "readOnly",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "required": {
      "defaultValue": null,
      "description": "Set the field as Required",
      "name": "required",
      "parent": {
        "fileName": "react-ui/src/Field/Field.types.ts",
        "name": "StrictFieldProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Field/Field.types.ts",
          "name": "StrictFieldProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "appearance": {
      "defaultValue": null,
      "description": "Manually set the Element appearance by Color Pool",
      "name": "appearance",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"text\""
          },
          {
            "value": "\"danger\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "danger": {
      "defaultValue": null,
      "description": "Set the Danger State",
      "name": "danger",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "info": {
      "defaultValue": null,
      "description": "Set the Info State",
      "name": "info",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "primary": {
      "defaultValue": null,
      "description": "Set the Primary State",
      "name": "primary",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "secondary": {
      "defaultValue": null,
      "description": "Set the Secondary State",
      "name": "secondary",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "success": {
      "defaultValue": null,
      "description": "Set the Success State",
      "name": "success",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "warning": {
      "defaultValue": null,
      "description": "Set the Warning State",
      "name": "warning",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "children": {
      "defaultValue": null,
      "description": "Main Component Content",
      "name": "children",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreUIComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreUIComponentProps"
        },
        {
          "fileName": "appbuckets/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        }
      ],
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "content": {
      "defaultValue": null,
      "description": "Content Shorthand",
      "name": "content",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreUIComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreUIComponentProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandContent"
      }
    },
    "className": {
      "defaultValue": null,
      "description": "User Defined Class Names",
      "name": "className",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreUIVoidComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreUIVoidComponentProps"
        },
        {
          "fileName": "appbuckets/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "as": {
      "defaultValue": null,
      "description": "",
      "name": "as",
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "ElementType<any>"
      }
    }
  }
}