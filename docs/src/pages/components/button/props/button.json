{
  "filename": "packages/react-ui/src/Button/Button.tsx",
  "tags": {},
  "filePath": "/Users/marcocavanna/Work/AppBuckets/Library/appbuckets/packages/react-ui/src/Button/Button.tsx",
  "description": "",
  "displayName": "Button",
  "props": {
    "backgroundColor": {
      "defaultValue": null,
      "description": "Choose Main background Color",
      "name": "backgroundColor",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"text\""
          },
          {
            "value": "\"danger\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "display": {
      "defaultValue": null,
      "description": "Set element display",
      "name": "display",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ResponsiveProps<ElementDisplay>"
      }
    },
    "fontWeight": {
      "defaultValue": null,
      "description": "Define the main Font Weight",
      "name": "fontWeight",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "FontWeight",
        "value": [
          {
            "value": "\"light\""
          },
          {
            "value": "\"regular\""
          },
          {
            "value": "\"semi bold\""
          },
          {
            "value": "\"bold\""
          }
        ]
      }
    },
    "size": {
      "defaultValue": null,
      "description": "Change component size",
      "name": "size",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "ElementSize",
        "value": [
          {
            "value": "\"big\""
          },
          {
            "value": "\"small\""
          },
          {
            "value": "\"extra small\""
          },
          {
            "value": "\"normal\""
          },
          {
            "value": "\"large\""
          },
          {
            "value": "\"huge\""
          }
        ]
      }
    },
    "textAlign": {
      "defaultValue": null,
      "description": "Define Text Align",
      "name": "textAlign",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "ContentAlign",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"center\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "textColor": {
      "defaultValue": null,
      "description": "Choose main text color",
      "name": "textColor",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "ComponentDisplayProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "ComponentDisplayProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"text\""
          },
          {
            "value": "\"danger\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "active": {
      "defaultValue": null,
      "description": "Set button as Active, this option will work only with `toggle` button",
      "name": "active",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disabled": {
      "defaultValue": null,
      "description": "Disable the Button",
      "name": "disabled",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disableRipple": {
      "defaultValue": null,
      "description": "Disable Ripple Effect",
      "name": "disableRipple",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "fab": {
      "defaultValue": null,
      "description": "Draw button as a FAB, it work only without content",
      "name": "fab",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "fitted": {
      "defaultValue": null,
      "description": "Fit a Button to its content, removing the min width declaration",
      "name": "fitted",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "flat": {
      "defaultValue": null,
      "description": "Set the Flat Style, inverting Appearance Color",
      "name": "flat",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "full": {
      "defaultValue": null,
      "description": "Se the Button as Full Width",
      "name": "full",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "icon": {
      "defaultValue": null,
      "description": "Insert an Icon into the Button",
      "name": "icon",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "AppBucketsIcon<IconProps>"
      }
    },
    "iconPosition": {
      "defaultValue": null,
      "description": "Set the Icon position, this prop is ignored without icon",
      "name": "iconPosition",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"left\" | \"right\"",
        "value": [
          {
            "value": "\"left\""
          },
          {
            "value": "\"right\""
          }
        ]
      }
    },
    "inverted": {
      "defaultValue": null,
      "description": "Invert Button Style",
      "name": "inverted",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "loading": {
      "defaultValue": null,
      "description": "Set Loading State",
      "name": "loading",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "onClick": {
      "defaultValue": null,
      "description": "Defined onClick function",
      "name": "onClick",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ButtonClickHandler"
      }
    },
    "rounded": {
      "defaultValue": null,
      "description": "Make the Button rounded",
      "name": "rounded",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "tabIndex": {
      "defaultValue": null,
      "description": "Define the Button Tab Index",
      "name": "tabIndex",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "number"
      }
    },
    "toggle": {
      "defaultValue": null,
      "description": "Set the button as a Toggle",
      "name": "toggle",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "tooltip": {
      "defaultValue": null,
      "description": "Add a Tooltip Text, showed using basic popup",
      "name": "tooltip",
      "parent": {
        "fileName": "react-ui/src/Button/Button.types.ts",
        "name": "StrictButtonProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/Button/Button.types.ts",
          "name": "StrictButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandContent"
      }
    },
    "children": {
      "defaultValue": null,
      "description": "Main Component Content",
      "name": "children",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreUIComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreUIComponentProps"
        },
        {
          "fileName": "appbuckets/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        {
          "fileName": "appbuckets/node_modules/@types/react/index.d.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "ReactNode"
      }
    },
    "content": {
      "defaultValue": null,
      "description": "Content Shorthand",
      "name": "content",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreUIComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreUIComponentProps"
        }
      ],
      "required": false,
      "type": {
        "name": "ShorthandContent"
      }
    },
    "className": {
      "defaultValue": null,
      "description": "User Defined Class Names",
      "name": "className",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "CoreUIVoidComponentProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "CoreUIVoidComponentProps"
        },
        {
          "fileName": "appbuckets/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "as": {
      "defaultValue": null,
      "description": "",
      "name": "as",
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "TypeLiteral"
        }
      ],
      "required": false,
      "type": {
        "name": "ElementType<any>"
      }
    },
    "appearance": {
      "defaultValue": null,
      "description": "Manually set the Element appearance by Color Pool",
      "name": "appearance",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "AppBucketsColor",
        "value": [
          {
            "value": "\"text\""
          },
          {
            "value": "\"danger\""
          },
          {
            "value": "\"info\""
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"success\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"text secondary\""
          },
          {
            "value": "\"black\""
          },
          {
            "value": "\"white\""
          },
          {
            "value": "\"white shade\""
          },
          {
            "value": "\"blue\""
          },
          {
            "value": "\"teal\""
          },
          {
            "value": "\"green\""
          },
          {
            "value": "\"yellow\""
          },
          {
            "value": "\"orange\""
          },
          {
            "value": "\"red\""
          },
          {
            "value": "\"pink\""
          },
          {
            "value": "\"purple\""
          },
          {
            "value": "\"cloud light\""
          },
          {
            "value": "\"cloud\""
          },
          {
            "value": "\"cloud dark\""
          }
        ]
      }
    },
    "danger": {
      "defaultValue": null,
      "description": "Set the Danger State",
      "name": "danger",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "info": {
      "defaultValue": null,
      "description": "Set the Info State",
      "name": "info",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "primary": {
      "defaultValue": null,
      "description": "Set the Primary State",
      "name": "primary",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "secondary": {
      "defaultValue": null,
      "description": "Set the Secondary State",
      "name": "secondary",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "success": {
      "defaultValue": null,
      "description": "Set the Success State",
      "name": "success",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "warning": {
      "defaultValue": null,
      "description": "Set the Warning State",
      "name": "warning",
      "parent": {
        "fileName": "react-ui/src/generic.ts",
        "name": "AppearanceProps"
      },
      "declarations": [
        {
          "fileName": "react-ui/src/generic.ts",
          "name": "AppearanceProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    }
  }
}