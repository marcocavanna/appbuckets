$shade-step: 100% / 13;

/// Get Tinted Color
/// @author Marco Cavanna
/// @param {Color} $color - Initial Color
/// @param {Number} $step (1) - Tint Step
/// @return {Color} - New Color
@function color-tint($color, $step: 1) {
  $lightness: $shade-step * $step;

  $h: hue($color);
  $l: lightness($color);
  $s: saturation($color);

  $new-l: $l + $lightness;

  @if $new-l > 100 {
    @return hsl($h, $s, 100%);
  } @else {
    @return hsl($h, $s, $new-l);
  }
}

/// Get Shaded Color
/// @author Marco Cavanna
/// @param {Color} $color - Initial Color
/// @param {Number} $step (1) - Shade Step
/// @return {Color} - New Color
@function color-shade($color, $step: 1) {
  $darkness: $shade-step * $step;

  $h: hue($color);
  $l: lightness($color);
  $s: saturation($color);

  $new-l: $l - $darkness;

  @if $new-l < 0 {
    @return hsl($h, $s, 0%);
  } @else {
    @return hsl($h, $s, $new-l);
  }
}

@function power-number($number, $exp) {
  $value: 1;

  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $number;
    }
  } @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $number
    }
  }

  @return $value;
}

@function color-luminance($color) {

  $color-rgb: ('red': red($color), 'green': green($color), 'blue': blue($color));

  @each $name, $value in $color-rgb {
    $adjusted: 0;
    $value: $value / 255;

    @if $value < 0.03928 {
      $value: $value / 12.92;
    } @else {
      $value: ($value + .055) / 1.055;
      $value: power-number($value, 2);
    }
    $color-rgb: map-merge($color-rgb, ($name: $value));
  }

  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722);

}

@function choose-contrast-color($analyze-color, $if-dark, $if-light) {
  @if $analyze-color == transparent {
    @return $if-light;
  }
  @if (color-luminance($analyze-color) > 0.55) {
    @return $if-light;
  }
  @return $if-dark;
}
